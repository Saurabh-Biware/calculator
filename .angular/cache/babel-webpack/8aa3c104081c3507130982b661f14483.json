{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/formula-builder.service\";\nimport * as i2 from \"@angular/common\";\n\nconst _c0 = function () {\n  return [\"left\"];\n};\n\nfunction TreeNodeComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-tree-node\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", ctx_r1.node.left)(\"path\", ctx_r1.path.concat(i0.ɵɵpureFunction0(2, _c0)));\n  }\n}\n\nconst _c1 = function () {\n  return [\"right\"];\n};\n\nfunction TreeNodeComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-tree-node\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", ctx_r2.node.right)(\"path\", ctx_r2.path.concat(i0.ɵɵpureFunction0(2, _c1)));\n  }\n}\n\nconst _c2 = function () {\n  return [\"expression\"];\n};\n\nfunction TreeNodeComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-tree-node\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", ctx_r3.node.expression)(\"path\", ctx_r3.path.concat(i0.ɵɵpureFunction0(2, _c2)));\n  }\n}\n\nconst _c3 = function () {\n  return [\"power\"];\n};\n\nfunction TreeNodeComponent_div_5_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-tree-node\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", ctx_r4.node.power)(\"path\", ctx_r4.path.concat(i0.ɵɵpureFunction0(2, _c3)));\n  }\n}\n\nconst _c4 = function (a1) {\n  return [\"arguments\", a1];\n};\n\nfunction TreeNodeComponent_div_5_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-tree-node\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const arg_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", arg_r7)(\"path\", ctx_r6.path.concat(i0.ɵɵpureFunction1(2, _c4, i_r8.toString())));\n  }\n}\n\nfunction TreeNodeComponent_div_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TreeNodeComponent_div_5_div_5_div_1_Template, 2, 4, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.node.arguments);\n  }\n}\n\nfunction TreeNodeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TreeNodeComponent_div_5_div_1_Template, 2, 3, \"div\", 4);\n    i0.ɵɵtemplate(2, TreeNodeComponent_div_5_div_2_Template, 2, 3, \"div\", 4);\n    i0.ɵɵtemplate(3, TreeNodeComponent_div_5_div_3_Template, 2, 3, \"div\", 4);\n    i0.ɵɵtemplate(4, TreeNodeComponent_div_5_div_4_Template, 2, 3, \"div\", 4);\n    i0.ɵɵtemplate(5, TreeNodeComponent_div_5_div_5_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.left);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.right);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.expression);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.power);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.arguments && ctx_r0.node.arguments.length > 0);\n  }\n}\n\nexport let TreeNodeComponent = /*#__PURE__*/(() => {\n  class TreeNodeComponent {\n    constructor(formulaService) {\n      this.formulaService = formulaService;\n      this.path = [];\n    }\n\n    getNodeLabel(node) {\n      switch (node.type) {\n        case \"ADDITION\":\n        case \"SUBTRACTION\":\n        case \"MULTIPLICATION\":\n        case \"DIVISION\":\n        case \"POWER\":\n          return node.type;\n\n        case \"NEGATION\":\n          return node.type;\n\n        case \"NUMBER\":\n          return node.value.toString();\n\n        case \"E\":\n        case \"PI\":\n          return node.type;\n\n        case \"VARIABLE\":\n          return node.name;\n\n        case \"FUNCTION\":\n          return `${node.name}(${node.arguments.length})`;\n\n        default:\n          return node.type;\n      }\n    }\n\n    getNodeStyle(node) {\n      // Depending on the node type adjust the color\n      switch (node.type) {\n        case \"ADDITION\":\n        case \"SUBTRACTION\":\n        case \"MULTIPLICATION\":\n        case \"DIVISION\":\n        case \"POWER\":\n          return {\n            \"background-color\": \"#FFD700\"\n          };\n\n        case \"FUNCTION\":\n          return {\n            \"background-color\": \"#ADFF2F\"\n          };\n\n        case \"NUMBER\":\n        case \"E\":\n        case \"PI\":\n        case \"VARIABLE\":\n          return {\n            \"background-color\": \"#87CEFA\"\n          };\n\n        default:\n          return {\n            \"background-color\": \"#D3D3D3\"\n          };\n      }\n    }\n\n    confirmDelete() {\n      if (confirm(\"Are you sure you want to delete this node?\")) {\n        this.deleteCurrentNode();\n      }\n    }\n\n    deleteCurrentNode() {\n      if (this.path.length === 0) {\n        alert(\"Cannot delete the root node.\");\n        return;\n      }\n\n      this.formulaService.deleteNode(this.path);\n    }\n\n  }\n\n  TreeNodeComponent.ɵfac = function TreeNodeComponent_Factory(t) {\n    return new (t || TreeNodeComponent)(i0.ɵɵdirectiveInject(i1.FormulaBuilderService));\n  };\n\n  TreeNodeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TreeNodeComponent,\n    selectors: [[\"app-tree-node\"]],\n    inputs: {\n      node: \"node\",\n      path: \"path\"\n    },\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"node\", 3, \"ngStyle\"], [3, \"click\"], [\"class\", \"children\", 4, \"ngIf\"], [1, \"children\"], [4, \"ngIf\"], [3, \"node\", \"path\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function TreeNodeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"span\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TreeNodeComponent_Template_button_click_3_listener() {\n          return ctx.confirmDelete();\n        });\n        i0.ɵɵtext(4, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, TreeNodeComponent_div_5_Template, 6, 5, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", ctx.getNodeStyle(ctx.node));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.getNodeLabel(ctx.node));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.node.left || ctx.node.right || ctx.node.expression || ctx.node.power || ctx.node.arguments);\n      }\n    },\n    directives: [i2.NgStyle, i2.NgIf, TreeNodeComponent, i2.NgForOf],\n    styles: [\".node[_ngcontent-%COMP%]{border:1px solid #000;padding:5px;margin:5px;border-radius:4px;display:inline-block;position:relative}.children[_ngcontent-%COMP%]{margin-left:20px;border-left:1px dashed #000;padding-left:10px}button[_ngcontent-%COMP%]{margin-left:10px;padding:2px 5px;font-size:.8em}\"]\n  });\n  return TreeNodeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}